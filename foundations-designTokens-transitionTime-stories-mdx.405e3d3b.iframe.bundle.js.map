{"version":3,"file":"foundations-designTokens-transitionTime-stories-mdx.405e3d3b.iframe.bundle.js","mappings":";;;AAuBA;;AAEA;;AAGA;;;AAGA;AACA;AAEA;;;;;;AAMA;;;;AAKA;;AAGA","sources":["webpack://@lokalise/louis/./src/foundations/designTokens/transitionTime.stories.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport addons from '@storybook/addons';\nimport { NAVIGATE_URL } from '@storybook/core-events';\nimport { Meta, Story, Canvas } from '@storybook/addon-docs';\nimport { themes, ThemeProvider, ensure } from '@storybook/theming';\nimport LinkTo from '@storybook/addon-links/react';\nimport { styled } from '../../utils/styled';\nimport { color, transitionTime as transitionTimeHelper } from '../../utils/theme';\nexport const Template = (args, context) => {\n  window.setTimeout(() => {\n    addons.getChannel().emit(NAVIGATE_URL, `?path=/docs/${context.id}`);\n  }, 0);\n  const colorTheme = context?.globals?.backgrounds?.value === '#2D2E30' ? 'dark' : 'light';\n  const StyledColorContainer = styled.div`\n        min-height: 500px;\n        padding: 20px;\n        background-color: ${context?.globals?.backgrounds?.value};\n        && * {\n            color: ${colorTheme === 'dark' ? '#ffffff' : undefined};\n        }\n    `;\n  const ItemBlock = styled.div`\n        width: 50px;\n        height: 50px;\n        border: 1px solid ${color('green.600')};\n        background-color: ${color('green.200')};\n    `;\n  const ItemWrapper = styled.div`\n        max-width: 200px;\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        justify-content: space-between;\n        transition: all ${transitionTimeHelper()};\n        &:hover {\n            max-width: 400px;\n        }\n    `;\n  const StyledCode = styled.code`\n        min-width: 110px;\n    `;\n  return <ThemeProvider theme={ensure(themes.base)} mdxType=\"ThemeProvider\">\n            <StyledColorContainer mdxType=\"StyledColorContainer\">\n                <ItemWrapper mdxType=\"ItemWrapper\">\n                    <StyledCode mdxType=\"StyledCode\">transitionTime()</StyledCode>\n                    <ItemBlock mdxType=\"ItemBlock\" />\n                </ItemWrapper>\n            </StyledColorContainer>\n        </ThemeProvider>;\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst StyledColorContainer = makeShortcode(\"StyledColorContainer\");\nconst ItemWrapper = makeShortcode(\"ItemWrapper\");\nconst StyledCode = makeShortcode(\"StyledCode\");\nconst ItemBlock = makeShortcode(\"ItemBlock\");\nconst layoutProps = {\n  Template\n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Foundations/Design Tokens/Transition Time\" parameters={{\n      viewMode: 'docs',\n      previewTabs: {\n        canvas: {\n          hidden: true\n        }\n      },\n      controls: {\n        disable: true\n      },\n      actions: {\n        disable: true\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"transition-time\"\n    }}>{`Transition Time`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#overview\"\n        }}>{`Overview`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#transition-time-options\"\n        }}>{`Transition Time Options`}</a></li>\n    </ul>\n    <h2 id=\"overview\">Overview</h2>\n    <p>{`Refer to `}<LinkTo kind=\"Foundations/Theming/Theme Helpers\" mdxType=\"LinkTo\">{`Theme Helpers`}</LinkTo>{` for additional information on how to use transition time in components.`}</p>\n    <h3 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @lokalise/louis\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { transitionTime } from '@lokalise/louis';\n\nconst StyledBox = styled.button\\`\n    transition: all \\${transitionTime()};\n\\`;\n`}</code></pre>\n    <h2 id=\"examples\">Transition Time Options</h2>\n    <Story name=\"Transition Time\" mdxType=\"Story\">{Template.bind({})}</Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const transitionTime = Template.bind({});\ntransitionTime.storyName = 'Transition Time';\ntransitionTime.parameters = { storySource: { source: '(args, context) => {\\n  window.setTimeout(() => {\\n    addons.getChannel().emit(NAVIGATE_URL, `?path=/docs/${context.id}`);\\n  }, 0);\\n  const colorTheme = context?.globals?.backgrounds?.value === \\'#2D2E30\\' ? \\'dark\\' : \\'light\\';\\n  const StyledColorContainer = styled.div`\\n        min-height: 500px;\\n        padding: 20px;\\n        background-color: ${context?.globals?.backgrounds?.value};\\n        && * {\\n            color: ${colorTheme === \\'dark\\' ? \\'#ffffff\\' : undefined};\\n        }\\n    `;\\n  const ItemBlock = styled.div`\\n        width: 50px;\\n        height: 50px;\\n        border: 1px solid ${color(\\'green.600\\')};\\n        background-color: ${color(\\'green.200\\')};\\n    `;\\n  const ItemWrapper = styled.div`\\n        max-width: 200px;\\n        display: flex;\\n        align-items: center;\\n        gap: 10px;\\n        justify-content: space-between;\\n        transition: all ${transitionTimeHelper()};\\n        &:hover {\\n            max-width: 400px;\\n        }\\n    `;\\n  const StyledCode = styled.code`\\n        min-width: 110px;\\n    `;\\n  return <ThemeProvider theme={ensure(themes.base)}>\\n            <StyledColorContainer>\\n                <ItemWrapper>\\n                    <StyledCode>transitionTime()</StyledCode>\\n                    <ItemBlock />\\n                </ItemWrapper>\\n            </StyledColorContainer>\\n        </ThemeProvider>;\\n}' } };\n\nconst componentMeta = { title: 'Foundations/Design Tokens/Transition Time', parameters: {\n  viewMode: 'docs',\n  previewTabs: {\n    canvas: {\n      hidden: true\n    }\n  },\n  controls: {\n    disable: true\n  },\n  actions: {\n    disable: true\n  }\n}, includeStories: [\"transitionTime\"],  };\n\nconst mdxStoryNameToKey = {\"Transition Time\":\"transitionTime\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}