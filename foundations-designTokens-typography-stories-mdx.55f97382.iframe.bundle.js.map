{"version":3,"file":"foundations-designTokens-typography-stories-mdx.55f97382.iframe.bundle.js","mappings":";AAgBA;AACA;AACA;AAEA;;AAGA;;;AAIA","sources":["webpack://@lokalise/louis/./src/foundations/designTokens/typography.stories.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport addons from '@storybook/addons';\nimport { NAVIGATE_URL } from '@storybook/core-events';\nimport { Meta, Story, Canvas } from '@storybook/addon-docs';\nimport LinkTo from '@storybook/addon-links/react';\nimport { css, styled } from '../../utils/styled';\nimport { color, fontFamily, typography as typographyHelper } from '../../utils/theme';\nimport { typography as typographyMap } from './typography';\nexport const TypographyComponent = styled.span`\n    font-family: ${fontFamily('default')};\n    color: ${color('content.primary')};\n    ${props => typographyHelper(props.styleKey)}\n`;\nexport const TypographyBodyCell = styled.td`\n    padding: 10px 25px 10px 0;\n`;\nexport const TypographyHeadCell = styled.th`\n    text-align: left;\n    font-family: var(--sb-theme-font-family-default);\n`;\nexport const TypographyRow = props => {\n  const {\n    token\n  } = props;\n  return <tr>\n            <TypographyBodyCell mdxType=\"TypographyBodyCell\">\n                <code>typography('{token}')</code>\n            </TypographyBodyCell>\n            <TypographyBodyCell mdxType=\"TypographyBodyCell\">\n                <code>\n                    {typographyMap[token]['fontSize']}/{typographyMap[token]['lineHeight']}\n                </code>\n            </TypographyBodyCell>\n            <TypographyBodyCell mdxType=\"TypographyBodyCell\">\n                <TypographyComponent styleKey={token} mdxType=\"TypographyComponent\">Lorem Ipsum</TypographyComponent>\n            </TypographyBodyCell>\n        </tr>;\n};\nexport const TypographyTable = (args, context) => {\n  window.setTimeout(() => {\n    addons.getChannel().emit(NAVIGATE_URL, `?path=/docs/${context.id}`);\n  }, 0);\n  return <table>\n            <thead>\n                <tr>\n                    <TypographyHeadCell mdxType=\"TypographyHeadCell\">Token</TypographyHeadCell>\n                    <TypographyHeadCell mdxType=\"TypographyHeadCell\">Value</TypographyHeadCell>\n                    <TypographyHeadCell mdxType=\"TypographyHeadCell\">Sample</TypographyHeadCell>\n                </tr>\n            </thead>\n            <tbody>\n                {Object.keys(typographyMap).map(token => <TypographyRow key={token} token={token} mdxType=\"TypographyRow\" />)}\n            </tbody>\n        </table>;\n};\n\nconst layoutProps = {\n  TypographyComponent,\nTypographyBodyCell,\nTypographyHeadCell,\nTypographyRow,\nTypographyTable\n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n\n    <Meta title=\"Foundations/Design Tokens/Typography\" parameters={{\n      viewMode: 'docs',\n      previewTabs: {\n        canvas: {\n          hidden: true\n        }\n      },\n      controls: {\n        disable: true\n      },\n      actions: {\n        disable: true\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"typography\"\n    }}>{`Typography`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#overview\"\n        }}>{`Overview`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#figma-design-file\"\n        }}>{`Figma Design File`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#typography-options\"\n        }}>{`Typography Options`}</a></li>\n    </ul>\n    <h2 id=\"overview\">Overview</h2>\n    <p>{`At Lokalise we use Graphik typeface internally, and it is `}<strong parentName=\"p\">{`NOT bundled`}</strong>{` in Louis by default due to legal requirements. Please purchase it from their `}<a parentName=\"p\" {...{\n        \"href\": \"https://type.today/en/Graphik\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`website`}</a>{` in case you need it.`}</p>\n    <p>{`If you'd like to install a custom font family, please see the `}<LinkTo kind=\"Foundations/Theming/ThemeProvider\" mdxType=\"LinkTo\">{`ThemeProvider`}</LinkTo>{` section for more information.`}</p>\n    <h3 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @lokalise/louis\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { typography } from '@lokalise/louis';\n\nconst Heading1 = styled.h1\\`\n    typography('heading1')\n\\`;\n\n...\n\n    return (\n        <Heading1>\n            My Heading\n        </Heading1>\n    );\n`}</code></pre>\n    <h2 id=\"figma-design-file\">Figma Design File</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <a href=\"https://www.figma.com/file/zfCOLmZam4nrttG6IVzQyz/UI-Library?node-id=5398%3A21831\" target=\"_blank\">\n    Figma Source File | Typography\n        </a>\n      </li>\n    </ul>\n    <h2 id=\"typography-options\">Typography Options</h2>\n    <Canvas withSource=\"none\" mdxType=\"Canvas\">\n    <Story name=\"Typography\" mdxType=\"Story\">{TypographyTable.bind({})}</Story>\n    </Canvas>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const typography = TypographyTable.bind({});\ntypography.storyName = 'Typography';\ntypography.parameters = { storySource: { source: '(args, context) => {\\n  window.setTimeout(() => {\\n    addons.getChannel().emit(NAVIGATE_URL, `?path=/docs/${context.id}`);\\n  }, 0);\\n  return <table>\\n            <thead>\\n                <tr>\\n                    <TypographyHeadCell>Token</TypographyHeadCell>\\n                    <TypographyHeadCell>Value</TypographyHeadCell>\\n                    <TypographyHeadCell>Sample</TypographyHeadCell>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                {Object.keys(typographyMap).map(token => <TypographyRow key={token} token={token} />)}\\n            </tbody>\\n        </table>;\\n}' } };\n\nconst componentMeta = { title: 'Foundations/Design Tokens/Typography', parameters: {\n  viewMode: 'docs',\n  previewTabs: {\n    canvas: {\n      hidden: true\n    }\n  },\n  controls: {\n    disable: true\n  },\n  actions: {\n    disable: true\n  }\n}, includeStories: [\"typography\"],  };\n\nconst mdxStoryNameToKey = {\"Typography\":\"typography\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}