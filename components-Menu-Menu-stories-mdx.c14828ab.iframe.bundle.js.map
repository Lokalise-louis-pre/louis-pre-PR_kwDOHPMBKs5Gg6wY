{"version":3,"file":"components-Menu-Menu-stories-mdx.c14828ab.iframe.bundle.js","mappings":";AAWA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAQA;;ACtBA;;AAEA;;;;;;;;;ACMA;;;;AAIA;;;;;AAKA;;AAEA;;AAEA;;;;;;;;;AASA;;;;;AAKA;AACA;AACA;;;;;;;;;;AAUA;;;AAKA;;;ACnDA;AACA;;AAIA","sources":["webpack://@lokalise/louis/./src/components/Menu/MenuList/MenuDrawer.tsx","webpack://@lokalise/louis/./src/components/Menu/MenuList/styles.ts","webpack://@lokalise/louis/./src/components/Menu/MenuItem/styles.ts","webpack://@lokalise/louis/./src/components/Menu/MenuDivider/index.ts"],"sourcesContent":["import { css, styled } from '../../../utils/styled';\nimport { color, modifier, radius, spacing, zIndex } from '../../../utils/theme';\n\nexport type MenuDrawerProps = {\n    /**\n     * Toggles full width rendering of the MenuDrawer.\n     * */\n    fullWidth?: boolean;\n};\n\nexport const MenuDrawer = styled.div<MenuDrawerProps>`\n    background-color: ${color('background.primary')};\n    padding: ${spacing(1, 0)};\n    width: max-content;\n    border-radius: ${radius('md')};\n    border: 1px solid ${color('border.primary')};\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n    z-index: ${zIndex('popover')};\n\n    ${modifier(\n        'fullWidth',\n        css`\n            width: 100%;\n        `,\n    )}\n`;\n\nMenuDrawer.displayName = 'MenuDrawer';\n","import { css, styled } from '../../../utils/styled';\nimport { modifier, zIndex } from '../../../utils/theme';\n\nexport const Container = styled.div<{ fullWidth: boolean }>`\n    width: max-content;\n    z-index: ${zIndex('popover')};\n\n    ${modifier(\n        'fullWidth',\n        css`\n            width: 100%;\n        `,\n    )}\n\n    &&&&:focus {\n        outline: none !important;\n    }\n`;\n","import { DoneIcon } from '../../../foundations/icons';\nimport { styled } from '../../../utils/styled';\nimport { color, fontFamily, spacing } from '../../../utils/theme';\n\nexport const StyledDoneIcon = styled(DoneIcon)`\n    margin-right: 4px;\n`;\n\n/**\n * Set default node for this element as \"div\". This is useful for cases when this component is used as a standalone\n * component. There could be a cases where it is nested inside a button element or a button element is nested\n * in it - in that cases there are DOM node validation errors. In case the user wants to turn it into accessible\n * component it is possible to user \"role\" attribute */\nexport const MenuItemContainer = styled.div`\n    box-sizing: border-box;\n    min-width: 0;\n    line-height: 18px;\n    font-family: ${fontFamily('default')};\n    font-weight: normal;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: ${spacing(2, 3)};\n    font-size: 13px;\n    color: ${color('content.primary')};\n    cursor: pointer;\n    fill: ${color('content.primary')};\n    position: relative;\n    border: 0;\n    background: none;\n    width: 100%;\n    text-decoration: none;\n\n    // Fixes specific bug. In case the MenuItem becomes an anchor and mouse is hovered over the item and the arrows are used to change the focus of the menu item.\n    &:hover:not([disabled]):not(:focus) {\n        color: ${color('content.primary')};\n    }\n\n    &:focus,\n    &:hover:not([disabled]):not([data-hover-disabled='true']) {\n        background-color: ${color('primary.500')};\n        color: ${color('content.white')};\n        fill: ${color('content.white')};\n    }\n\n    outline: none !important;\n    // Specificity wars. Solution is to delete all the \"outline: none;\" occurrences in the code. That would allow to get rid of !important inside outlineStyles.ts\n    &&&&:focus {\n        outline: none !important;\n    }\n\n    &:disabled {\n        color: ${color('content.disabled')};\n        cursor: not-allowed;\n    }\n`;\n\nMenuItemContainer.displayName = 'MenuItemContainer';\n","import { styled } from '../../../utils/styled';\nimport { color, spacing } from '../../../utils/theme';\n\nexport const MenuDivider = styled.hr`\n    display: block;\n    height: 1px;\n    background-color: ${color('border.primary')};\n    margin: ${spacing(1, 0)} !important; // Necessary to override #tasks.tab-pane hr\n    border: none;\n`;\n\nMenuDivider.displayName = 'MenuDivider';\n"],"names":[],"sourceRoot":""}