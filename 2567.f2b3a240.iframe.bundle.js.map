{"version":3,"file":"2567.f2b3a240.iframe.bundle.js","mappings":";;;;;;;;;;AAgBA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAWA;;;;AAIA;;;;;;AAMA;;;;AAIA;AACA;;;AAGA;AAuBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;ACpFA;;AAEA;AACA;;;AAGA;;;;;AAKA;;AAEA;AAEA;AACA;AAEA;AACA;;;;AAKA;;;AAIA;AAEA;;;;;;;AAQA;;;;AASA;AACA;AAGA;AACA;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;;AAEA;AACA","sources":["webpack://@lokalise/louis/./src/components/Popover/styles.ts","webpack://@lokalise/louis/./src/components/Tag/styles.ts","webpack://@lokalise/louis/./src/components/Tooltip/styles.ts"],"sourcesContent":["import type { Placement } from '@popperjs/core/lib/enums';\nimport type { HTMLAttributes } from 'react';\n\nimport { css, styled } from '../../utils/styled';\nimport { color, fontFamily, radius, typography, variants, zIndex } from '../../utils/theme';\n\nconst bottom = css`\n    top: -5px;\n\n    &::before {\n        border-left-width: 1px;\n        border-left-style: solid;\n        border-top-width: 1px;\n        border-top-style: solid;\n    }\n`;\nconst top = css`\n    bottom: -5px;\n\n    &::before {\n        border-right-width: 1px;\n        border-right-style: solid;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n    }\n`;\nconst left = css`\n    right: -5px;\n\n    &::before {\n        border-right-width: 1px;\n        border-right-style: solid;\n        border-top-width: 1px;\n        border-top-style: solid;\n    }\n`;\nconst right = css`\n    left: -5px;\n\n    &::before {\n        border-left-width: 1px;\n        border-left-style: solid;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n    }\n`;\n\nexport const Arrow = styled.div<{ placement?: Placement }>`\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: ${zIndex('hide')};\n\n    &::before {\n        position: absolute;\n        width: 8px;\n        height: 8px;\n        z-index: ${zIndex('hide')};\n        content: '';\n        display: block;\n        transform: rotate(45deg);\n        background-color: ${color('background.primary')};\n        border-color: ${color('border.primary')};\n    }\n\n    ${variants(\n        'placement',\n        {\n            top,\n            bottom,\n            left,\n            right,\n            'right-end': right,\n            'right-start': right,\n            'left-start': left,\n            'auto-end': css``,\n            'auto-start': css``,\n            auto: css``,\n            'bottom-end': bottom,\n            'bottom-start': bottom,\n            'left-end': left,\n            'top-end': top,\n            'top-start': top,\n        },\n        'auto',\n    )}\n`;\n\nexport const Content = styled.div<HTMLAttributes<HTMLElement>>`\n    padding: 0;\n    border-radius: ${radius('md')};\n    background-color: ${color('background.primary')};\n    border: 1px solid ${color('border.primary')};\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n    z-index: ${zIndex('popover')};\n    color: ${color('content.primary')};\n    font-family: ${fontFamily('default')};\n    ${typography('description')};\n`;\n","import { css, styled } from '../../utils/styled';\nimport { oneLineEllipsis } from '../../utils/styles';\nimport { color, excludeProps, modifier, radius, spacing, typography, variants } from '../../utils/theme';\nimport type { TagProps } from './Tag';\n\ninterface StyledTagProps {\n    variant: NonNullable<TagProps['variant']>;\n    color: string;\n    size: NonNullable<TagProps['size']>;\n    fullWidth?: boolean;\n}\n\nconst baseStyle = css<StyledTagProps>`\n    ${oneLineEllipsis};\n    box-sizing: border-box;\n    ${typography('tags')};\n    border-radius: ${radius('rounded')};\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${(props) => props.color};\n    max-width: max-content;\n    width: min-content;\n    line-height: 14px; // This is needed so the text appears centered\n    height: 20px;\n    padding: 2px ${spacing(2)};\n\n    ${variants('variant', {\n        solid: css<StyledTagProps>`\n            color: ${color('background.primary')};\n            background-color: ${(props) => props.color};\n        `,\n        outlined: css<StyledTagProps>`\n            color: ${(props) => props.color};\n            background-color: transparent;\n        `,\n    })};\n\n    ${variants('size', {\n        default: css<StyledTagProps>`\n            line-height: 14px; // This is needed so the text appears centered\n            height: 20px;\n            padding: 2px ${spacing(2)};\n        `,\n        small: css<StyledTagProps>`\n            font-size: 10px;\n            line-height: 1;\n            padding: 1px 5px 2px;\n            height: auto;\n        `,\n    })};\n\n    ${modifier(\n        'fullWidth',\n        css`\n            width: 100%;\n            display: inline-block;\n        `,\n    )}\n`;\n\nexport const SimpleTag = styled.div.withConfig<StyledTagProps>({ shouldForwardProp: excludeProps(['color']) })`\n    ${baseStyle};\n`;\n\nexport const TagButton = styled.button.withConfig<StyledTagProps>({ shouldForwardProp: excludeProps(['color']) })`\n    ${baseStyle};\n\n    cursor: pointer;\n\n    &:hover {\n        filter: brightness(1.1);\n    }\n`;\n","import { styled } from '../../utils/styled';\nimport { color, fontFamily, radius, typography, zIndex } from '../../utils/theme';\nimport { PopoverArrow as BaseArrow, PopoverContent as BaseContent } from '../Popover';\n\nexport const Content = styled(BaseContent)`\n    font: ${fontFamily('default')};\n    ${typography('caption2')};\n    background-color: ${color('content.black')};\n    color: ${color('content.white')};\n    border-radius: ${radius('md')};\n    padding: 3px 8px 4px;\n    border-color: ${color('content.black')};\n    z-index: ${zIndex('tooltip')};\n`;\n\nexport const Arrow = styled(BaseArrow)`\n    &:before {\n        background-color: ${color('content.black')};\n        border-color: ${color('content.black')};\n    }\n`;\n"],"names":[],"sourceRoot":""}